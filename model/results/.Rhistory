df = read.csv("tree_f3_md100_mss100.csv")
df
plot(df)
colnames(df)
colnames(df) <- c("max_depth", "min_sample_size", "mean_score")
colnames(df)
df
plot(df)
df[c(1,2),]
df[,c(1,2)]
df[,c(1,3)]
plot(df[,c(1,3)])
df[,c(1,3)]
df
df[c(1,3),]
df[,c(1,3)]
df[,3]
df[,3] == 2
df[df$min_sample_size=1]
df[df$min_sample_size==1]
df[df$min_sample_size==1,]
plot(df[df$min_sample_size==1,])
plot(df[df$min_sample_size==1,])
s1 = df[df$min_sample_size==1,]
s1
s1[c(1,3),]
s1[,c(1,3)]
plot(s1[,c(1,3)])
s1 = df[df$mean_score==1,]
colnames(df)
s1 = df[df$mean_score >= 80,]
s1 = df[df$mean_score >= .8,]
s1 = df[df$mean_score == .8,]
s1
df[df$mean_score == .8,]
df[df$mean_score == df.8,]
df
df[df$mean_score > .8,]
best = df[df$mean_score > .8,]
best
plot(best)
best
colname(best)
colnames(best)
best[best$min_samples_size == 7,]
best[best$min_sample_size == 7,]
s7 = best[best$min_sample_size == 7,]
plot(s7)
plot(s7[,c(1,3)])
best
very_best = df[df$mean_score > .81,]
very_best
very_best = df[df$mean_score > .815,]
very_best
s7 = df[df$max_depth == 3,]
d3 = df[df$max_depth == 3,]
d3
d3[,c(2,3)]
plot(d3[,c(2,3)])
df[df$mean_score,]
df[df$mean_score]
df[,df$mean_score]
df[,df$mean_score]
colname(df)
colnames(df)
df$mean_score
plot(df$mean_score)
plot(df$mean_score, xlab="Complexity", ylab="Mean Accuracy")
plot(df$mean_score, xlab="Complexity", ylab="Mean Accuracy", main="Decition Tree Classifier")
plot(df$mean_score, xlab="Complexity", ylab="Mean Accuracy", main="Decision Tree Classifiers")
plng("overview.png", width=4, height=4, units='in', res=300)
png("overview.png", width=4, height=4, units='in', res=300)
plot(df$mean_score, xlab="Complexity", ylab="Mean Accuracy", main="Decision Tree Classifiers")
dev.off()
png("overview.png", width=8, height=8, units='in', res=300)
plot(df$mean_score, xlab="Complexity", ylab="Mean Accuracy", main="Decision Tree Classifiers")
dev.off()
png("overview.png", width=10, height=10, units='in', res=300)
plot(df$mean_score, xlab="Complexity", ylab="Mean Accuracy", main="Decision Tree Classifiers", pch=20)
dev.off()
png("overview.png", width=8, height=8, units='in', res=300)
plot(df$mean_score, xlab="Complexity", ylab="Mean Accuracy", main="Decision Tree Classifiers", pch=20)
dev.off()
very_best
save(very_best, file="very_best.Rdata")
load("very_best.Rdata")
df1 = load("very_best.Rdata")
df1
ls()
rm(very_best)
ls()
load("very_best.Rdata")
ls()
very_best
ls()
d3
very_best
plot(d3)
plot(d3[,c(2,3)])
plot(d3[,c(2,3)], main="Decision Tree Classifier (max_depth=3)", xlab="Minumum Sample Size", ylab="Mean Accuracy")
plot(d3[,c(2,3)], main="Decision Tree Classifier (max_depth=3)", xlab="Minumum Sample Size", ylab="Mean Accuracy")
plot(d3[,c(2,3)], main="Decision Tree Classifier (Maximum Depth=3)", xlab="Minumum Sample Size", ylab="Mean Accuracy")
plot(d3[,c(2,3)], main="Decision Tree Classifier (Maximum Depth 3)", xlab="Minumum Sample Size", ylab="Mean Accuracy")
png("max_depth_3.png", width=8, height=8, units='in', res=300)
plot(d3[,c(2,3)], main="Decision Tree Classifier (Maximum Depth 3)", xlab="Minumum Sample Size", ylab="Mean Accuracy")
dev.off()
png("max_depth_3.png", width=8, height=8, units='in', res=300)
plot(d3[,c(2,3)], main="Decision Tree Classifier (Maximum Depth 3)", xlab="Minumum Sample Size", ylab="Mean Accuracy", pch=20)
dev.off()
very_best
very_best[c(2,3),]
very_best[,c(2,3)]
plot(very_best[,c(2,3)])
hist(df)
hist(df[,3)
hist(df[,3]
hist(df[,3])
hist(df[,3], xlab="Mean Accuracy")
hist(df[,3], xlab="Mean Accuracy", main="Decision Tree Classifer")
hist(df[,3], xlab="Mean Accuracy", main="Decision Tree Classifier")
png("mean_accuracy_hist.png", width=8, height=8, units='in', res=300)
hist(df[,3], xlab="Mean Accuracy", main="Decision Tree Classifier")
dev.off()
plot(very_best)
plot(df)
exit
q()
df = read.csv("training/bagging_f3_e300_rs311_md50_mss50.csv")
colnames(df)
df
colnames(df) <- c("Estimators", "Depth", "Minimum Sample Size", "Mean Accuracy")
df
colnames(df)
df$Mean Accuracy
df$"Mean Accuracy"
plot(df$"Mean Accuracy")
plot(df$"Mean Accuracy", main="Bagging", xlab="Complexity", ylab="Mean Accuracy", pch=20)
png("bagging_overview.png", width=8, height=8, units='in', res=300)
plot(df$"Mean Accuracy", main="Bagging", xlab="Complexity", ylab="Mean Accuracy", pch=20)
dev.off()
bagging_best = df[df$mean_score > .815,]
bagging_best
df
colnames(df)
df$"Mean Accuracy"
max(df$"Mean Accuracy")
bagging_best = df[df$mean_score > .79,]
bagging_best
max(df$"Mean Accuracy")
bagging_best = df[df$"Mean Accuracy" > .79,]
bagging_best
bagging_best = df[df$"Mean Accuracy" > .793,]
bagging_best
bagging_best = df[df$"Mean Accuracy" > .794,]
bagging_best
plot(bagging_best)
plot(bagging_best$"Mean Accuracy")
bagging_best = df[df$"Mean Accuracy" > .795,]
bagging_best
bagging_best
hist(bagging_best$"Mean Accuracy")
hist(bagging_best$"Mean Accuracy")
hist(df$"Mean Accuracy")
png("bagging_mean_accuracy_hist.png", width=8, height=8, units='in', res=300)
hist(df[,4], xlab="Mean Accuracy", main="Bagging")
dev.off()
bagging_best
bagging_best = df[df$"Mean Accuracy" > .795,]
bagging_best
ls
list.files()
test = read.csv("testing/bagging.csv")
test
plot(test)
colnames(test)
colnames(test)<-c("Estimators", "Depth", "Minimum Sample Size", "Mean Score")
plot(test)
plot(test$"Mean Score")
plot(test)
test[test$"Mean Score" > .85]
test[test$"Mean Score" > .85,]
test[,test$"Mean Score" > .85]
test[,test$"Mean Score" > .84]
test[test$"Mean Score" > .84,]
best_test = test[test$"Mean Score" > .84,]
best_test[best_test$"Sample Size"]
best_test[best_test$"Sample Size" == 32,]
best_test[,best_test$"Sample Size" == 32]
best_test[best_test$"Sample Size" == 32,]
best_test
best_test[best_test$"Sample Size" == 32,]
best_test[best_test$"Minimum Sample Size" == 32,]
mss32 = best_test[best_test$"Minimum Sample Size" == 32,]
mss32
mss32[,c(2, 4)]
plot(mss32[,c(2, 4)])
q()
