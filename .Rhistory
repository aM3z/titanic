??df
df?
?df
?read.csv
df = read.csv("data/train.csv", stringsAsFactors=F)
df
table(df)
head(df)
df["Age"]
df["Age"]
as.numeric(df["Age"])
as.numeric(unlist(df["Age"]))
df["Age"]
age = df["Age"]
age
na.exclude(age)
na.gam.replace(age)
na.gam
na.gam?
?na.gam
?na.gam.replace
??na.gam.replace
??na.gam
?gam
??gam
na.gam.replace(age)
library(gam)
library("gam")
library.install("gam")
install.library("gam")
install.library(gam)
install.package("gam")
install.package(gam)
package.install(gam)
package.install("gam")
install.packages(gam)
install.packages("gam")
na.gam.replace(age)
na.gam
?na
??na
library("gam")
na.gam.replace(age)
age
na.gam.replace(unlist(age))
na.exclude(age)
age = na.exclude(age)
plot(age)
hist(age)
as.numeric(age)
as.numeric(unlist(age))
plot(as.numeric(unlist(age)))
age = as.numeric(unlist(age))
hist(age)
osrt(age)
sort(age)
plot(sort(age))
plot(sort(age))
df
head(df)
df[Fare]
df["Fare"]
df["age,""Fare"]
df["age","Fare"]
df["Age","Fare"]
df[,c("Age","Fare")]
age_fare = df[,c("Age","Fare")]
age_fare
na.exclude(age_fare)
age_fare
na.exclude(age_fare)
age_fare = na.exclude(age_fare)
age_fare
plot(age_fare)
age_fare[0]
age_fare[0,]
age_fare[,c(0)]
head(age_fare)
age_fare["age"]
age_fare["Age"]
data = df[,c("Age","Fare")]
data
data = exclude(data)
data = na.exclude(data)
data
head(age)
head(data)
age = data["Age"]
afare = data["Fare"]
fare = data["Fare"]
fare
age
plot(age, fare)
plot(age~fare)
age
as.numeric(age)
as.numeric(unlist(age))
age = as.numeric(unlist(age))
fare = as.numeric(unlist(fare))
plot(age~fare)
plot(fare~age)
abline(lm(fare~age), col="red")
plot(fare~age)
abline(lm(fare~age), col="red")
plot(fare~age, main="Fare vs Age", xlab="Fare", ylab="Age")
plot(fare~age, main="Fare vs Age", xlab="Age", ylab="Fare")
abline(lm(fare~age), col="red")
sample(data, nrow(data), replace=T)
data
s1 = sample(data, nrow(data), replace=T)
s1
s1 = sample(data, replace=TRUE)
s1
s1
data
s1
data
s1
data
s1 = sample(data, replace=TRUE)
s1
s1
data
s1
s1 = sample_n(data, replace=TRUE)a
age
plot(age)
plot(sort(age))
abline(age, col="red")
age
abline(age.N, age, col="red")
sorted_ages = sort(age)
lm(sorted_ages)
length(sorted_ages)
1:length(sorted_ages)
ages_indices = 1:length(sorted_ages)
lm(sorted_ages~ages_indices)
abline(lm(sorted_ages~ages_indices), col="red")
plot(sorted_ages~ages_indices)
abline(lm(sorted_ages~ages_indices), col="red")
ages
age
sample(age)
age
sample(age)
s1 = sort(sample(age))
plot(s1)
plot(sorted_ages~ages_indices)
plot(s1)
plot(sorted_ages~ages_indices)
plot(s1)
plot(sorted_ages~ages_indices)
plot(s1)
plot(sorted_ages~ages_indices)
s1 = sort(sample(age), replace=TRUE)
s1 = sort(sample(age), replace=T)
s1 = sort(sample(age, replace=TRUE))
plot(s1)
s2 = sort(sample(age, replace=TRUE))
plot(s2)
s3 = sort(sample(age, replace=TRUE))
s4 = sort(sample(age, replace=TRUE))
s5 = sort(sample(age, replace=TRUE))
plot(s3)
plot(s4)
plot(s5)
plot(s6)
plot(sorted_ages)
abline(lm(s1), col="red")
abline(lm(1:length(s1), s1), col="red")
abline(lm(s1, 1:length(s1)), col="red")
s1
1:length(s1)
s1_indx = 1:length(s1)
lim(s1_indx~s1)
lm(s1_indx~s1)
lm(1:length(s1)~s1)
lm(1:length(s2)~s2)
lm(1:length(s3)~s3)
lm(1:length(s4)~s4)
lm(1:length(s5)~s5)
sam1 = 1:length(s1)~s1
lm(sam1)
sam2 = 1:length(s2)~s2
sam3 = 1:length(s3)~s3
sam4 = 1:length(s4)~s4
sam5 = 1:length(s5)~s5
lm(sam1)
lm(sam2)
lm(sam3)
lm(sam4)
lm(sam5)
plot(sam1)
sam2 = s1~1:length(s2)
plot(sam2)
sam2 = s2~1:length(s2)
plot(sam2)
sam2 = s2~(1:length(s2))
plot(sam2)
sam2 = s2~c(1:length(s2))
plot(sam2)
sam1 = s1~c(1:length(s1))
plot(sam1)
sam3 = s3~c(1:length(s3))
sam4 = s4~c(1:length(s4))
sam5 = s5~c(1:length(s5))
abline(lm(sam1))
abline(lm(sam2))
plot(sort(age))
abline(lm(sam1))
abline(lm(sam2))
abline(lm(sam3))
abline(lm(sam4))
abline(lm(sam5))
plot(sort(age))
abline(lm(sam1), col="deepskyblue")
abline(lm(sam1), col="firebrick")
abline(lm(sam1), col="deepskyblue")
abline(lm(sam2), col="firebrick")
abline(lm(sam3), col="forestgreen")
abline(lm(sam4), col="darkred")
abline(lm(sam5), col="aquamarine")
s1 = sort(sample(age, replace=TRUE))
s2 = sort(sample(age, replace=TRUE))
s3 = sort(sample(age, replace=TRUE))
?load
library(MASS)
data()
data(USArrests)
USArrests
head(USArrests)
USArrests["Assault"]
USArrests
head(USArrests)
ass = USArrests["Assault"]
pop = USArrests["UrbanPop"]
ass
pop
pop[1]
lm(ass, pop)
lm(ass~pop)
as.numeric(ass)
as.numeric(unlist(ass))
as.numeric(unlist(pop))
data = USArrests[,c("Assault", "UrbanPop")]
data
sample1 = sample(data, replace=T)
sample1
sample1 = sample(data, replace=T)
sort(sample1)
sample1 = data[sample(data, replace=T),]
sample(data, replace=TRUE)
sample(data, replace=TRUE)
sample(data, replace=TRUE)
sample(data, replace=TRUE)
sample(data, replace=TRUE)
sample(data, replace=TRUE)
sample(data, replace=TRUE)
sample(data, replace=TRUE)
data
data
sample(data, replace=TRUE)
sample(data, replace=TRUE)
sample(data, replace=TRUE)
sample(data, replace=TRUE)
sample(data, replace=TRUE)
sample(data, replace=TRUE)
sample(data, replace=TRUE)
sample(data, replace=TRUE)
data
sample(data, replace=FALSE)
sample(data, replace=FALSE)
sample(data, replace=FALSE)
sample(data, replace=TRUE)
sample(data, size=3, replace=TRUE)
sample(data, size=3, replace=TRUE)
sample(data, size=3, replace=TRUE)
data[ sample(data, size=3, replace=TRUE), ]
data[ sample(nrow(data), size=3, replace=TRUE), ]
data[ sample(nrow(data), replace=TRUE), ]
data[ sample(nrow(data), replace=TRUE), ]
sample_1 = data[ sample(nrow(data), replace=TRUE), ]
sample_2 = data[ sample(nrow(data), replace=TRUE), ]
sample_3 = data[ sample(nrow(data), replace=TRUE), ]
sample_1
sample_2
sample_3
plot(data)
lm(data)
abline(lm(data))
lm(data)
plot(data)
abline(lm(data))
abline(lm(data), col="red")
assault = data["Assault"]
ass = data["Assault"]
ass
pop = data["UrbanPop"]
pop
ass = as.numerical(ass)
ass = as.numeric(ass)
ass = as.numeric(unlist(ass))
pop = as.numeric(unlist(pop))
ass
pop
abline(lm(ass~pop), col="red")
plot(ass~pop)
abline(lm(ass~pop), col="red")
sample_1
s1 = sample_1
s2 = sample_2
s3 = sample_3
s1
s2
s3
s1["Assault"]
s1["Assault"]~s1["UrbanPop"]
plot(s1["Assault"]~s1["UrbanPop"])
plot(as.numeric(unlist(s1["Assault"]))~as.numeric(unlist(s1["UrbanPop"])))
abline(lm(as.numeric(unlist(s1["Assault"]))~as.numeric(unlist(s1["UrbanPop"]))), col="red")
abline(lm(as.numeric(unlist(s2["Assault"]))~as.numeric(unlist(s2["UrbanPop"]))), col="blue")
plot(data["Assault"]~data["UrbanPop"])
plot(as.numeric(unlist(data["Assault"]))~as.numeric(unlist(data["UrbanPop"])))
abline(lm(as.numeric(unlist(s1["Assault"]))~as.numeric(unlist(s1["UrbanPop"]))), col="red")
abline(lm(as.numeric(unlist(s2["Assault"]))~as.numeric(unlist(s2["UrbanPop"]))), col="purple")
abline(lm(as.numeric(unlist(s2["Assault"]))~as.numeric(unlist(s2["UrbanPop"]))), col="green")
abline(lm(as.numeric(unlist(s3["Assault"]))~as.numeric(unlist(s3["UrbanPop"]))), col="purple")
s1_predictor = lm(as.numeric(unlist(s1["Assault"]))~as.numeric(unlist(s1["UrbanPop"])))
s1_predictor = lm(as.numeric(unlist(s2["Assault"]))~as.numeric(unlist(s2["UrbanPop"])))
s1_predictor = lm(as.numeric(unlist(s1["Assault"]))~as.numeric(unlist(s1["UrbanPop"])))
s2_predictor = lm(as.numeric(unlist(s2["Assault"]))~as.numeric(unlist(s2["UrbanPop"])))
s3_predictor = lm(as.numeric(unlist(s3["Assault"]))~as.numeric(unlist(s3["UrbanPop"])))
s1_predictor
s2_predictor
s3_predictor
data = USArrests[,c("Assault", "UrbanPop")]
data
data1 = USArrests[,c("Assault", "Murder")]
plot(data1)
data = USArrests[,c("Assault", "Murder")]
s1 = data[ sample(nrow(data), replace=TRUE), ]
s2 = data[ sample(nrow(data), replace=TRUE), ]
s3 = data[ sample(nrow(data), replace=TRUE), ]
s4 = data[ sample(nrow(data), replace=TRUE), ]
s5 = data[ sample(nrow(data), replace=TRUE), ]
s1
p1 = lm(as.numeric(unlist(s1["Assault"]))~as.numeric(unlist(s1["Murder"])))
p2 = lm(as.numeric(unlist(s2["Assault"]))~as.numeric(unlist(s2["Murder"])))
p3 = lm(as.numeric(unlist(s3["Assault"]))~as.numeric(unlist(s3["Murder"])))
p4 = lm(as.numeric(unlist(s4["Assault"]))~as.numeric(unlist(s4["Murder"])))
p5 = lm(as.numeric(unlist(s5["Assault"]))~as.numeric(unlist(s5["Murder"])))
p1
p1
p2
p3
p4
p5
p1
p1
p2
p3
p4
p5
plot(data, main"US Arrests")
plot(data, main="US Arrests")
png(filename="us_arrest_plot.png")
plot(data, main="US Arrests")
dev.off()
plot(data, main="US Arrests")
abline(p1, col="red")
p1
abline(p1, col="red")
plot(as.numeric(unlist(data["Assault"]))~as.numeric(unlist(data["Murder"])))
plot(as.numeric(unlist(data["Murder"]))~as.numeric(unlist(data["Assault"])), main="US Arrests", xlab="Assault", ylab="Murder")
head(data)
head(USAssult)
USAssault
ls()
USArrests
plot(as.numeric(unlist(data["Murder"]))~as.numeric(unlist(data["Assault"])), main="US Arrests", xlab="Assault (per 100,000)", ylab="Murder (per 100,00)")
png(filename="us_arrest_plot.png")
plot(as.numeric(unlist(data["Murder"]))~as.numeric(unlist(data["Assault"])), main="US Arrests", xlab="Assault (per 100,000)", ylab="Murder (per 100,00)")
dev.off()
plot(as.numeric(unlist(data["Murder"]))~as.numeric(unlist(data["Assault"])), main="US Arrests", xlab="Assault (per 100,000)", ylab="Murder (per 100,00)")
abline(p1, col="red")
abline(p1, col="red")
p1
plot(as.numeric(unlist(data["Assault"]))~as.numeric(unlist(data["Murder"])), main="US Arrests", xlab="Murder (per 100,000)", ylab="Assault (per 100,00)")
abline(p1, col="red")
plot(as.numeric(unlist(data["Murder"]))~as.numeric(unlist(data["Assault"])), main="US Arrests", xlab="Assault (per 100,000)", ylab="Murder (per 100,00)")
plot(as.numeric(unlist(data["Assault"]))~as.numeric(unlist(data["Murder"])), main="US Arrests", xlab="Murder (per 100,000)", ylab="Assault (per 100,00)")
png(filename="us_arrest_plot.png")
plot(as.numeric(unlist(data["Assault"]))~as.numeric(unlist(data["Murder"])), main="US Arrests", xlab="Murder (per 100,000)", ylab="Assault (per 100,00)")
plot(as.numeric(unlist(data["Murder"]))~as.numeric(unlist(data["Assault"])), main="US Arrests", xlab="Assault (per 100,000)", ylab="Murder (per 100,00)")
plot(as.numeric(unlist(data["Assault"]))~as.numeric(unlist(data["Murder"])), main="US Arrests", xlab="Murder (per 100,000)", ylab="Assault (per 100,00)")
plot(as.numeric(unlist(data["Murder"]))~as.numeric(unlist(data["Assault"])), main="US Arrests", xlab="Assault (per 100,000)", ylab="Murder (per 100,00)")
dev.off()
plot(as.numeric(unlist(data["Murder"]))~as.numeric(unlist(data["Assault"])), main="US Arrests", xlab="Assault (per 100,000)", ylab="Murder (per 100,00)")
p1 = lm(as.numeric(unlist(s1["Murder"]))~as.numeric(unlist(s1["Assault"])))
p2 = lm(as.numeric(unlist(s2["Murder"]))~as.numeric(unlist(s2["Assault"])))
p3 = lm(as.numeric(unlist(s3["Murder"]))~as.numeric(unlist(s3["Assault"])))
p4 = lm(as.numeric(unlist(s4["Murder"]))~as.numeric(unlist(s4["Assault"])))
p5 = lm(as.numeric(unlist(s5["Murder"]))~as.numeric(unlist(s5["Assault"])))
p1
abline(p1, col="red")
p2
p3
p4
p5
p1
plot(as.numeric(unlist(data["Murder"]))~as.numeric(unlist(data["Assault"])), main="US Arrests", xlab="Assault (per 100,000)", ylab="Murder (per 100,00)")
png(filename="us_arrest_plot_with_preds.png")
plot(as.numeric(unlist(data["Murder"]))~as.numeric(unlist(data["Assault"])), main="US Arrests", xlab="Assault (per 100,000)", ylab="Murder (per 100,00)")
abline(p1, col="red")
abline(p2, col="darkgreen")
abline(p3, col="darkblue")
abline(p4, col="purple")
abline(p5, col="pink")
dev.off()
p1
0.04725(150) - 0.27444
lm(150)
0.04725(150) - 0.27444
0.04725 * 150 - 0.27444
0.04406*150 + 0.69727
0.04349*150 + 0.58464
0.03405*150 + 1.63936
0.04118 * 150 + 0.24221
6.81306+7.30627+7.10814+6.74686+6.41921
0.2 * (6.81306+7.30627+7.10814+6.74686+6.41921)
data
0.04725 * 1501 - 0.27444
0.04725 * 151 - 0.27444
0.04406*151 + 0.69727
0.04349*151 + 0.58464
0.03405*151 + 1.63936
0.04118 * 151 + 0.24221
0.2 * (6.86031+7.35033+7.15163+6.78091+ 6.46039)
lm(data[])
15.34 * 151 + 51.27
p1
p = lm(as.numeric(unlist(data["Murder"]))~as.numeric(unlist(data["Assault"])))
p
0.04191 * 151 + 0.63168
data
0.04191 * 151 + 0.63168
data
data
data
data
s1
sort(s1)
names[s1]
p1
?lm
?predict.lm
predict(p1)
?predict.lm
?predict.lm
?predict.lm
predict(lm, 4)
predict(lm, c(3))
predict(p1, c(3))
predict(p1, 4)
predict(p1, 151)
predict(p1, c(151))
ls()
exit
exit()
q()
